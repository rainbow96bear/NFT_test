{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC4906.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "7c0c1b08feedb8eafeb9740a88ff4ffd1f0932cc0802d0f1a2c52428b8a936e6",
          "withoutMetadata": "b5d7459be6d594a77149670a59ecf5c3c4e2751ebbb85736daf30e0cbf48d1ba",
          "linkedWithoutMetadata": "b5d7459be6d594a77149670a59ecf5c3c4e2751ebbb85736daf30e0cbf48d1ba"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "0867777c2a8117bcb44d4e085bbb54561bf02c3ccf56224414bba37311549b0c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "dcbc892cb39ee88e2209443c1e56abe54c712454976dbe1919389c7f6e657db2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "507f43258c1dab1ca895f30273281b754a7276a267d41450ba0a1307a1f0fadd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "45f28e849fa929af2c055db8cbe3a7ebbdd57faed6cbc002fd7b78b75971c579",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/NFTtest.sol:testNFT": {
        "src": "contracts\\NFTtest.sol:6",
        "version": {
          "withMetadata": "cf8e13b8ca2bffd09e3881da5792271781014f5cd04d5d699593e6779154d79a",
          "withoutMetadata": "8cbd016af992c7b45c651a61102b67a3daa5d18c8fd26c926a9f0b5ba8ee5530",
          "linkedWithoutMetadata": "8cbd016af992c7b45c651a61102b67a3daa5d18c8fd26c926a9f0b5ba8ee5530"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(string)",
          "setTokenURI(uint256,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "testNFT",
            "src": "contracts\\NFTtest.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenID",
            "src": "contracts\\NFTtest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:16"
            },
            {
              "label": "minter",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "testNFT",
              "src": "contracts\\NFTtest.sol:7"
            },
            {
              "label": "tokenID",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "testNFT",
              "src": "contracts\\NFTtest.sol:9"
            },
            {
              "label": "metadataURIs",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "testNFT",
              "src": "contracts\\NFTtest.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "b0f76b1371e750aa89f0953faedf67d518edf4b4bbcbab6e251958d4fc616ca8",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)2880_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)2880_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)2880_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "7c0c1b08feedb8eafeb9740a88ff4ffd1f0932cc0802d0f1a2c52428b8a936e6",
          "withoutMetadata": "b5d7459be6d594a77149670a59ecf5c3c4e2751ebbb85736daf30e0cbf48d1ba",
          "linkedWithoutMetadata": "b5d7459be6d594a77149670a59ecf5c3c4e2751ebbb85736daf30e0cbf48d1ba"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "0867777c2a8117bcb44d4e085bbb54561bf02c3ccf56224414bba37311549b0c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "293405fae636ff5a910a99dea257531486ed4a8dfafba32e89de51316aa941f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "8c55d18c1adcc874b097de41c7eb30d3202beefe5c24f29d2f0d1aee5302ac8f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "13820fb7c824c6202415eaa53f616f6313b2df8ee904d14294d548d4091c8306",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "dcbc892cb39ee88e2209443c1e56abe54c712454976dbe1919389c7f6e657db2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "ed96c4f2bde5128ed8af8321f8fc9e11b8f798643a5eb5b7a20a9216019b38e2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "507f43258c1dab1ca895f30273281b754a7276a267d41450ba0a1307a1f0fadd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "45f28e849fa929af2c055db8cbe3a7ebbdd57faed6cbc002fd7b78b75971c579",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/NFTtest.sol:testNFT": {
        "src": "contracts\\NFTtest.sol:6",
        "version": {
          "withMetadata": "b05e02e02caa0c6998301bd0844258692bc997b496cd9ed3d8798c5be0cc2e43",
          "withoutMetadata": "b05e02e02caa0c6998301bd0844258692bc997b496cd9ed3d8798c5be0cc2e43",
          "linkedWithoutMetadata": "b05e02e02caa0c6998301bd0844258692bc997b496cd9ed3d8798c5be0cc2e43"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,string,string,string,uint256,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "testNFT",
            "src": "contracts\\NFTtest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "metadataURI",
            "src": "contracts\\NFTtest.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenId",
            "src": "contracts\\NFTtest.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:25"
            },
            {
              "label": "minter",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "testNFT",
              "src": "contracts\\NFTtest.sol:7"
            },
            {
              "label": "metadataURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "testNFT",
              "src": "contracts\\NFTtest.sol:9"
            },
            {
              "label": "tokenId",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "testNFT",
              "src": "contracts\\NFTtest.sol:19"
            },
            {
              "label": "tokenMetadata",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(TokenMetadata)5177_storage)",
              "contract": "testNFT",
              "src": "contracts\\NFTtest.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenMetadata)5177_storage)": {
              "label": "mapping(uint256 => struct testNFT.TokenMetadata)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenMetadata)5177_storage": {
              "label": "struct testNFT.TokenMetadata",
              "members": [
                {
                  "label": "city",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "mbti",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "age",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "gender",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:58",
        "version": {
          "withMetadata": "f581d0ff2d707bc7bf53489222170debfb72c0f61f6680e10716eeb74ab3e201",
          "withoutMetadata": "2764657ea884aa331d054d051e05c49165e9a9b3171f0ce95f62f14375f41bef",
          "linkedWithoutMetadata": "2764657ea884aa331d054d051e05c49165e9a9b3171f0ce95f62f14375f41bef"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:141"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:73"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:76"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:79"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "4",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:85"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:91"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:94"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)5303_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:106"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "9",
              "type": "t_enum(RubixProjectStatus)5289",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:112"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:119"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:122"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:125"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:128"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:131"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:134"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:137"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)5289": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)5282": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)5303_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)5303_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)5282",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:7",
        "version": {
          "withMetadata": "7a51de9080dda5c623025508f9b5822644ea8c7d8884648ce5ea02d66241e577",
          "withoutMetadata": "a2c10a2b2b8afcf83bf933f7c15a2aea8125771bf9a02d981bc0482b939a9bc7",
          "linkedWithoutMetadata": "a2c10a2b2b8afcf83bf933f7c15a2aea8125771bf9a02d981bc0482b939a9bc7"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)2880_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)2880_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)2880_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "b0f76b1371e750aa89f0953faedf67d518edf4b4bbcbab6e251958d4fc616ca8",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:7",
        "version": {
          "withMetadata": "673725bfbd299cc8bc087df4a83c7f9b505dbec9638c2cb9ba1a6f73acc23f9c",
          "withoutMetadata": "a2734f425bb55b1e3c2ee9b1fd841522584d5200a888b4ca70dcb9afb24393a0",
          "linkedWithoutMetadata": "a2734f425bb55b1e3c2ee9b1fd841522584d5200a888b4ca70dcb9afb24393a0"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "b0f76b1371e750aa89f0953faedf67d518edf4b4bbcbab6e251958d4fc616ca8",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)950_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)950_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)950_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "293405fae636ff5a910a99dea257531486ed4a8dfafba32e89de51316aa941f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "8c55d18c1adcc874b097de41c7eb30d3202beefe5c24f29d2f0d1aee5302ac8f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "13820fb7c824c6202415eaa53f616f6313b2df8ee904d14294d548d4091c8306",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "dcbc892cb39ee88e2209443c1e56abe54c712454976dbe1919389c7f6e657db2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "ed96c4f2bde5128ed8af8321f8fc9e11b8f798643a5eb5b7a20a9216019b38e2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "507f43258c1dab1ca895f30273281b754a7276a267d41450ba0a1307a1f0fadd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "45f28e849fa929af2c055db8cbe3a7ebbdd57faed6cbc002fd7b78b75971c579",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:7",
        "version": {
          "withMetadata": "7a51de9080dda5c623025508f9b5822644ea8c7d8884648ce5ea02d66241e577",
          "withoutMetadata": "a2c10a2b2b8afcf83bf933f7c15a2aea8125771bf9a02d981bc0482b939a9bc7",
          "linkedWithoutMetadata": "a2c10a2b2b8afcf83bf933f7c15a2aea8125771bf9a02d981bc0482b939a9bc7"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)950_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)950_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)950_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "b0f76b1371e750aa89f0953faedf67d518edf4b4bbcbab6e251958d4fc616ca8",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "7e7c0a677b01f0897d7b0f69bdf99e0f753e43c9e897e5cff3d4ad728e95538b",
          "withoutMetadata": "a2734f425bb55b1e3c2ee9b1fd841522584d5200a888b4ca70dcb9afb24393a0",
          "linkedWithoutMetadata": "a2734f425bb55b1e3c2ee9b1fd841522584d5200a888b4ca70dcb9afb24393a0"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "8eb61ee3fca154eeb1e409acea10ed41dc740fb680114f30e3a77d3a2919df1e",
          "withoutMetadata": "b916e9db2a9bd231c125d0b3d868135597737aa46644dda3c16f9fdcb190d552",
          "linkedWithoutMetadata": "b916e9db2a9bd231c125d0b3d868135597737aa46644dda3c16f9fdcb190d552"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "497928db97390a45dbb6792aca920c18016142441015ff54dcdb22ac58f71e14",
          "withoutMetadata": "2fdd00c0442d893e237290e029255e2e43380ddb84af15c1d0303a1155cf9247",
          "linkedWithoutMetadata": "2fdd00c0442d893e237290e029255e2e43380ddb84af15c1d0303a1155cf9247"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "9a4b8d627447bf43f817657b2d3b82d4c4dafea43bd5769efe1d9a8e2fa30dd3",
          "withoutMetadata": "3c504dbc47f2f9d9c875d648ef6c9628f60a1759c75865045f17db42638c55fd",
          "linkedWithoutMetadata": "3c504dbc47f2f9d9c875d648ef6c9628f60a1759c75865045f17db42638c55fd"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "497928db97390a45dbb6792aca920c18016142441015ff54dcdb22ac58f71e14",
          "withoutMetadata": "2fdd00c0442d893e237290e029255e2e43380ddb84af15c1d0303a1155cf9247",
          "linkedWithoutMetadata": "2fdd00c0442d893e237290e029255e2e43380ddb84af15c1d0303a1155cf9247"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "12d57ca864337a4a5e657b469c72e8df58e144793ed718ce27d8d19cbe78ea06",
          "withoutMetadata": "5c50c5b91ce4154860457dcc122988e86dcc68ae086275aa7eece915e9df39d6",
          "linkedWithoutMetadata": "5c50c5b91ce4154860457dcc122988e86dcc68ae086275aa7eece915e9df39d6"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "6882f02fe8cbd96c46b1c4d8ea139793b9ae8709e52576a305c7d4a3e0fca5f9",
          "withoutMetadata": "d25f64a69a34243d48356599ed06a0c4c7d84da7541510b684548b2a017b52b1",
          "linkedWithoutMetadata": "d25f64a69a34243d48356599ed06a0c4c7d84da7541510b684548b2a017b52b1"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "a9379ed82c60a18c06b3f70fa820f2c26c116cde7d37043b3316b4172191effe",
          "withoutMetadata": "f3688253a9af16182f2f98fb885371f540038dafa89c328d80e7d00737254d35",
          "linkedWithoutMetadata": "f3688253a9af16182f2f98fb885371f540038dafa89c328d80e7d00737254d35"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "6df5f10d7a4a20a0effeed9b1b130ec73b402ce0d977633575e3cf86d9124309",
          "withoutMetadata": "5a44e6cf324c3c670b8104af1ed368913568e8b8b6514390a953d599d143c460",
          "linkedWithoutMetadata": "5a44e6cf324c3c670b8104af1ed368913568e8b8b6514390a953d599d143c460"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "bc0cda975cd2b09a3ea9aca965ddc5683e71d93d22681c501529c13a3012ee46",
          "withoutMetadata": "ffa0aa6ea61d6e79d8efc4fdafc2d5f229014a4905f1a53b237d0f2745430bfa",
          "linkedWithoutMetadata": "ffa0aa6ea61d6e79d8efc4fdafc2d5f229014a4905f1a53b237d0f2745430bfa"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "2bb65ebebb2e641765b240c2baeeb894502646d39e1e0486e3a39c531ce540f9",
          "withoutMetadata": "4e9d9b47bcd1c37ab0e80d094ccbb75193bdab9f3759d9c75cc3320b10632bda",
          "linkedWithoutMetadata": "4e9d9b47bcd1c37ab0e80d094ccbb75193bdab9f3759d9c75cc3320b10632bda"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "cdebc5eda993e578891ce145839b07cc5ba2b26936862980ecc45aef05fe5440",
          "withoutMetadata": "2fdd00c0442d893e237290e029255e2e43380ddb84af15c1d0303a1155cf9247",
          "linkedWithoutMetadata": "2fdd00c0442d893e237290e029255e2e43380ddb84af15c1d0303a1155cf9247"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "ce542a58f4371805ad06caf5927ee77c9740b19d3627428d2e10fb4d525f5635",
          "withoutMetadata": "8feb3168178c90814d206ddbaae9576abd3a6d376fe15dfcc87f447197d1359d",
          "linkedWithoutMetadata": "8feb3168178c90814d206ddbaae9576abd3a6d376fe15dfcc87f447197d1359d"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "340c69b9e08f732aeb98f6885778cac237a82372ace6609986803e9bc20a9782",
          "withoutMetadata": "9c18db0e6dd90d9bafb6577c1f6a01fad326213c6ca9c2f13350ba54bf6b5b93",
          "linkedWithoutMetadata": "9c18db0e6dd90d9bafb6577c1f6a01fad326213c6ca9c2f13350ba54bf6b5b93"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "e43dc4a6e0eba74515a6467139a3269ac829ef4deb576a74776899922fea80a1",
          "withoutMetadata": "5c50c5b91ce4154860457dcc122988e86dcc68ae086275aa7eece915e9df39d6",
          "linkedWithoutMetadata": "5c50c5b91ce4154860457dcc122988e86dcc68ae086275aa7eece915e9df39d6"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "3f400d7e4a0e209303fc452dba1da68ffacab2e570bd070d95d25ff4f430e917",
          "withoutMetadata": "0bea56826ff55c2864023a58c6b02c1d9ccc9b7e697d3ffff6f14195385155fb",
          "linkedWithoutMetadata": "0bea56826ff55c2864023a58c6b02c1d9ccc9b7e697d3ffff6f14195385155fb"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)1142_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)1128",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)1128": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)1121": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)1142_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)1142_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)1121",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "a8d345b0c1e69ed0261d25822530c6fe79fa84bee62292efe1e6b0b6974abcab",
          "withoutMetadata": "8feb3168178c90814d206ddbaae9576abd3a6d376fe15dfcc87f447197d1359d",
          "linkedWithoutMetadata": "8feb3168178c90814d206ddbaae9576abd3a6d376fe15dfcc87f447197d1359d"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "470f573bbdf6eff5f7ee1cccad7d8c76175b8aebb0aa6db03515f8ea3bf6c275",
          "withoutMetadata": "f3688253a9af16182f2f98fb885371f540038dafa89c328d80e7d00737254d35",
          "linkedWithoutMetadata": "f3688253a9af16182f2f98fb885371f540038dafa89c328d80e7d00737254d35"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "b0f76b1371e750aa89f0953faedf67d518edf4b4bbcbab6e251958d4fc616ca8",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)1077_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)1077_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1077_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "293405fae636ff5a910a99dea257531486ed4a8dfafba32e89de51316aa941f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "8c55d18c1adcc874b097de41c7eb30d3202beefe5c24f29d2f0d1aee5302ac8f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "13820fb7c824c6202415eaa53f616f6313b2df8ee904d14294d548d4091c8306",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "dcbc892cb39ee88e2209443c1e56abe54c712454976dbe1919389c7f6e657db2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "ed96c4f2bde5128ed8af8321f8fc9e11b8f798643a5eb5b7a20a9216019b38e2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "507f43258c1dab1ca895f30273281b754a7276a267d41450ba0a1307a1f0fadd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "45f28e849fa929af2c055db8cbe3a7ebbdd57faed6cbc002fd7b78b75971c579",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "e43dc4a6e0eba74515a6467139a3269ac829ef4deb576a74776899922fea80a1",
          "withoutMetadata": "5c50c5b91ce4154860457dcc122988e86dcc68ae086275aa7eece915e9df39d6",
          "linkedWithoutMetadata": "5c50c5b91ce4154860457dcc122988e86dcc68ae086275aa7eece915e9df39d6"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)3317",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)3295",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)3354_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)3340",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3295": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)3317": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)3340": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)3333": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)3354_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)3354_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)3333",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "ee1ccf59e1ff703e156d3153db075332d68f86fdb15c32e79fae30a7e9256c37",
          "withoutMetadata": "a2c10a2b2b8afcf83bf933f7c15a2aea8125771bf9a02d981bc0482b939a9bc7",
          "linkedWithoutMetadata": "a2c10a2b2b8afcf83bf933f7c15a2aea8125771bf9a02d981bc0482b939a9bc7"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)1077_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)1077_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1077_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "b0f76b1371e750aa89f0953faedf67d518edf4b4bbcbab6e251958d4fc616ca8",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)950_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)950_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)950_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "293405fae636ff5a910a99dea257531486ed4a8dfafba32e89de51316aa941f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "8c55d18c1adcc874b097de41c7eb30d3202beefe5c24f29d2f0d1aee5302ac8f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "13820fb7c824c6202415eaa53f616f6313b2df8ee904d14294d548d4091c8306",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "dcbc892cb39ee88e2209443c1e56abe54c712454976dbe1919389c7f6e657db2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "ed96c4f2bde5128ed8af8321f8fc9e11b8f798643a5eb5b7a20a9216019b38e2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "507f43258c1dab1ca895f30273281b754a7276a267d41450ba0a1307a1f0fadd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "45f28e849fa929af2c055db8cbe3a7ebbdd57faed6cbc002fd7b78b75971c579",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "0463019b4d34f5bd3ac615f035ed152fb245dbc0a00cb407cb583398fc41ed8c",
          "withoutMetadata": "c98fe522223657ffd6eb8115987acf15757d17d3d0b4f50250ad617de278e781",
          "linkedWithoutMetadata": "c98fe522223657ffd6eb8115987acf15757d17d3d0b4f50250ad617de278e781"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)950_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)950_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)950_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "8dc39629d5f48cecc1d14185834798ce25183db892420d437ca3aab903ff38e1",
          "withoutMetadata": "853981ef194cf7ff73152c66fc8029831fc41ee5e9ed344c27ee6b571b5e8aab",
          "linkedWithoutMetadata": "853981ef194cf7ff73152c66fc8029831fc41ee5e9ed344c27ee6b571b5e8aab"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "b1176a98d1c973d9389aa43b02a0124d525fe13df7bc1f66d0123e37e5b9fe37",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "f6ae01632e466a006c549749d863975718890490df3d012c3ec3272cc4ba62c5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "c3b36787f57dd2b0e37878d86dacb2a80d2de45de4a239148c86b1de16465528",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "18dae0c3f6ca4d255e3a9986283df5f92b9bd4a0493da80f6a1d994384c84a23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:10",
        "version": {
          "withMetadata": "3ca87ac9b8f37a646e22e5bbb187d7f5af3cd1c47049d01f7a7505a99c0bfbf3",
          "withoutMetadata": "3769c5c819008d6a00f0453af5361700d667e7e1fce495fa64d71fc2860dfd39",
          "linkedWithoutMetadata": "3769c5c819008d6a00f0453af5361700d667e7e1fce495fa64d71fc2860dfd39"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:12"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)2743",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2743": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "ee8e85995f8942e730973697c8f3ff186df155bb4c1ce0432f631c37e53ff3cb",
          "withoutMetadata": "966b7ebef582ada54071a7ae86025cc187f19dbcdf4e73229b0b6d09a889ec84",
          "linkedWithoutMetadata": "966b7ebef582ada54071a7ae86025cc187f19dbcdf4e73229b0b6d09a889ec84"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)2765",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)2743",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)3074_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)3060",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)2743": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)2765": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)3060": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)3053": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)3074_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)3074_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)3053",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "8dc39629d5f48cecc1d14185834798ce25183db892420d437ca3aab903ff38e1",
          "withoutMetadata": "853981ef194cf7ff73152c66fc8029831fc41ee5e9ed344c27ee6b571b5e8aab",
          "linkedWithoutMetadata": "853981ef194cf7ff73152c66fc8029831fc41ee5e9ed344c27ee6b571b5e8aab"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "b1176a98d1c973d9389aa43b02a0124d525fe13df7bc1f66d0123e37e5b9fe37",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "f6ae01632e466a006c549749d863975718890490df3d012c3ec3272cc4ba62c5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "c3b36787f57dd2b0e37878d86dacb2a80d2de45de4a239148c86b1de16465528",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "18dae0c3f6ca4d255e3a9986283df5f92b9bd4a0493da80f6a1d994384c84a23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:10",
        "version": {
          "withMetadata": "8e455ce90e1e3a57794f0773e3b96c32a5933bd76240d34ee76647f3cb1c7271",
          "withoutMetadata": "66b41680fca408d9696960bf61904c416cb9928b4e7eb71019198c1b52652dcb",
          "linkedWithoutMetadata": "66b41680fca408d9696960bf61904c416cb9928b4e7eb71019198c1b52652dcb"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:12"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)2743",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2743": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "c958d0199f63b6c0c9f4e0876a2c7b84c66cf3a67a5c78e0525cd1b0ce639470",
          "withoutMetadata": "b6b63ec33e99ad49835b06a7e01c676b3cbce2ff71929650be24ecb4da2b00da",
          "linkedWithoutMetadata": "b6b63ec33e99ad49835b06a7e01c676b3cbce2ff71929650be24ecb4da2b00da"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)2765",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)2743",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)3042_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)3028",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)2743": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)2765": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)3028": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)3021": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)3042_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)3042_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)3021",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "8dc39629d5f48cecc1d14185834798ce25183db892420d437ca3aab903ff38e1",
          "withoutMetadata": "853981ef194cf7ff73152c66fc8029831fc41ee5e9ed344c27ee6b571b5e8aab",
          "linkedWithoutMetadata": "853981ef194cf7ff73152c66fc8029831fc41ee5e9ed344c27ee6b571b5e8aab"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "b1176a98d1c973d9389aa43b02a0124d525fe13df7bc1f66d0123e37e5b9fe37",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "f6ae01632e466a006c549749d863975718890490df3d012c3ec3272cc4ba62c5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "b0f76b1371e750aa89f0953faedf67d518edf4b4bbcbab6e251958d4fc616ca8",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "293405fae636ff5a910a99dea257531486ed4a8dfafba32e89de51316aa941f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "8c55d18c1adcc874b097de41c7eb30d3202beefe5c24f29d2f0d1aee5302ac8f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "13820fb7c824c6202415eaa53f616f6313b2df8ee904d14294d548d4091c8306",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "dcbc892cb39ee88e2209443c1e56abe54c712454976dbe1919389c7f6e657db2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "ed96c4f2bde5128ed8af8321f8fc9e11b8f798643a5eb5b7a20a9216019b38e2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "c3b36787f57dd2b0e37878d86dacb2a80d2de45de4a239148c86b1de16465528",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "507f43258c1dab1ca895f30273281b754a7276a267d41450ba0a1307a1f0fadd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "45f28e849fa929af2c055db8cbe3a7ebbdd57faed6cbc002fd7b78b75971c579",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "18dae0c3f6ca4d255e3a9986283df5f92b9bd4a0493da80f6a1d994384c84a23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)6763",
              "contract": "BasePaymaster",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)6763": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "90ede039a4fb7675c49f1f273efbf78309e9c8514eab1e2a1bd9583fdbbe0e46",
          "withoutMetadata": "853981ef194cf7ff73152c66fc8029831fc41ee5e9ed344c27ee6b571b5e8aab",
          "linkedWithoutMetadata": "853981ef194cf7ff73152c66fc8029831fc41ee5e9ed344c27ee6b571b5e8aab"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "d4cb75fc7a055ac0d271a42b7d324b9263896c4fcc590dc1b6109ec0f9ae4685",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "9dfb2a7f9523a584ea65c073036cb23dd77aa97eb39b1097c73d573f5ce8bc05",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "736c827d662dcef9ead318ff35d8b9148d1d2f5113595b3dfa306dd9e6453cd1",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)8730_storage)",
              "contract": "ERC20Permit",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8730_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8730_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "8bc483051987d01d3e74f7f70a0723132ed38750b7c4aa911f9e1d61e0f2431a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "5b0e87d5998d2c8a5e97b7d1d2748a9f2f98cc4d50ed99544ed367c38aa9c437",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "2e28ce88f1022d8d4cbb32d8db23a1a3352d33067ffe841362f540d485c5e0f0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "876829d521aa4a65538b5fee20221286cf623cfc56e631eadc7cd2bc511636e7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol:Math",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "119d7b55104912900ac1c039480eff97c9c2308d342b39d348a349133dd45a36",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "38d0e6783f8a033200ff84788658c411359ed15bd435a42b83d37b5afe2f82b2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "903cd61bdb2c1a8e2b70dafb4a6138e24c0676cc8aba470c33576af74d0cb653",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "9ea67f90c5d2c30ee12a5f7e6e65538535bef8172321b5a618eb66afa0d90f1e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "52faa59d15babda52d438e0ce0044fa84f52fe0e79085eca740096bdc9e1de24",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/.deps/npm/hardhat/console.sol:console": {
        "src": "contracts\\.deps\\npm\\hardhat\\console.sol:4",
        "version": {
          "withMetadata": "58d63d65cc138ef6f6e851e9f3ac119c7ff8c2f78e241eb9f1cb8e9139af823a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:10",
        "version": {
          "withMetadata": "3ca87ac9b8f37a646e22e5bbb187d7f5af3cd1c47049d01f7a7505a99c0bfbf3",
          "withoutMetadata": "3769c5c819008d6a00f0453af5361700d667e7e1fce495fa64d71fc2860dfd39",
          "linkedWithoutMetadata": "3769c5c819008d6a00f0453af5361700d667e7e1fce495fa64d71fc2860dfd39"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:12"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)19527",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)19527": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "e43dc4a6e0eba74515a6467139a3269ac829ef4deb576a74776899922fea80a1",
          "withoutMetadata": "5c50c5b91ce4154860457dcc122988e86dcc68ae086275aa7eece915e9df39d6",
          "linkedWithoutMetadata": "5c50c5b91ce4154860457dcc122988e86dcc68ae086275aa7eece915e9df39d6"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)19549",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)19527",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)19858_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)19844",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)19527": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)19549": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)19844": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)19837": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)19858_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)19858_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)19837",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "e231a27d66e10600b381283105da330b1b1589a915b31f0dd72f48956746fdf2",
          "withoutMetadata": "93fdb5f62d5342da2eed78438b95f79f8ec94deb07391515a77c567116bcea05",
          "linkedWithoutMetadata": "93fdb5f62d5342da2eed78438b95f79f8ec94deb07391515a77c567116bcea05"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)19549",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)19527",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)20761_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)20747",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)19527": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)19549": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)20747": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)20740": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)20761_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)20761_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)20740",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "ee1ccf59e1ff703e156d3153db075332d68f86fdb15c32e79fae30a7e9256c37",
          "withoutMetadata": "a2c10a2b2b8afcf83bf933f7c15a2aea8125771bf9a02d981bc0482b939a9bc7",
          "linkedWithoutMetadata": "a2c10a2b2b8afcf83bf933f7c15a2aea8125771bf9a02d981bc0482b939a9bc7"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.8"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "90cd622a06b54146488b50fe9f83e6f7204fd0089113168a4e714af14569e8fc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.8"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "0e87c042b06d2cb5137f056559fc52a2cd79ddf1dbbd74c6e4782c1eb7d28456",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "d15f828e7d856f04479762c5ba284a8dc93d65528ad064430f59152333016da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "fbec029ab91f7dc985938cdfe9c980d286be2958250d060f48c8327f5da1a877",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "2033da0315cf059dddbf0517004f3dbb85d79879ca817a09166f4fdfab54ed61",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "ecc8cc4a3a5b998b4b4831053af8cbd4e95179ebe75b17df578eb2ae940ba1c0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "4c07d21f8fa21d4c15d6e1a6668c3a6818c76d78cc12c1654bf411b9bcbbec03",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "41f53a6df8d197d6c87c51ab9fbc64b16643a704019ec90dbba55b88e6d4cf97",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "ce38079ac880b685f9bec4388c1bedc4783743444e6f1daf2c5cfbb582b140aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "f93dcfa1d517bc572224c922a9800ac84a5ac11958733038bf1af1e1ae60ffbc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "47d45eec72c93fe585874b15b160fe312c2184eced6350e354cf676986063738",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "35c4c6a9a6bcbdb1bdd63be584d4d6c4c354597ae9c002d22de4b71b4473b8f5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "b5911dfbb6988003bc8d8ceb5ecaf8c313f419d35190cdf512a33fa38e5dc0cf",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "e58cfd21bdff4e3fc2634fccc7d788a80f09d9041617572cd92796dae6d7cacf",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)6763",
              "contract": "BasePaymaster",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)6763": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "39665b73c81afb721f4fbcbbbc3dfdb7ebab5f06adb037354848e8f55aba1c9d",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "8724045afda927dc722c664e8e01cc7ff528905d8f653cfbd0f5d22281e1fb8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "088dd43d4af75e268d215b8a1f04036f409a06ebb0e78508fe7b028775347d57",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "90cef32788e632c2c2c87ed79d57d823fb6baee1523ede5d534ed13c3473cfc1",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)8730_storage)",
              "contract": "ERC20Permit",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8730_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8730_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "2656950722f659cc6e843e66bd44b09c5da9e0aec2f37937d08b564288611d02",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "71281bd32c02cfbb1dd739f503b334f9af51202eaea3f9acc5bc2a54e12dbf2d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "630a4a4423ea17d575da081a4915e0abd36d622206a24fcea91d73c5d2151739",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "cae1ac7df988a43cedcca21e1b00b3a869678f79e8ebd02ebcfd6cfbd9c5f572",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol:Math",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "037f2580aea2226f7d77caeaf8172de0a6302ce9f4c93d842855fd682440abb1",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "400de3d4996e6e32a36591a0a41bd84c3828a3b46526f7b0b78c634482b4f08b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "62641a95b3f2422d4615411b38a865adef73b6d93987b9484642b84444217d51",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "3faf631e251322896016d5e2eaeb8f4ad2b8e19c591c2840677ac563fe56332e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "db759fc1e127e9e1fdc4eb165bd18ca8ee412be6e9d6849d450c741c56f90d52",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/hardhat/console.sol:console": {
        "src": "contracts\\.deps\\npm\\hardhat\\console.sol:4",
        "version": {
          "withMetadata": "fbba9624e4a9352ea4d1765dacb09479f63cf67c4d3b04ba5c5c9d86b69154d2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:10",
        "version": {
          "withMetadata": "fce42fb76badd29699ea4da2a32e2f64fdefa4835000b7ee6e88b31981299789",
          "withoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd",
          "linkedWithoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:12"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)19527",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)19527": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "24e603842007dd7e7cdd57def7fe70c32832e8ada23f4f03ad0754ef3436d2da",
          "withoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba",
          "linkedWithoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)19549",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)19527",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)19858_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)19844",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)19527": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)19549": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)19844": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)19837": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)19858_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)19858_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)19837",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "6169c8cb732802d54d52adb770db669deecd10ca408054d56487a2430b44544e",
          "withoutMetadata": "eebb4f9b86f9230f54d8a21956865f49b800bfe71343c3ebd9f2ac1e3ea5beed",
          "linkedWithoutMetadata": "eebb4f9b86f9230f54d8a21956865f49b800bfe71343c3ebd9f2ac1e3ea5beed"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)19549",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)19527",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)20761_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)20747",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)19527": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)19549": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)20747": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)20740": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)20761_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)20761_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)20740",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "e06bbdbe9a9da735b2fe43356ce46ae53a7aeae40096139f1439b73f838c4357",
          "withoutMetadata": "4dda8b3d100d40588a2e1d899419481c286d8b2ce01d063f4e039074453e8aae",
          "linkedWithoutMetadata": "4dda8b3d100d40588a2e1d899419481c286d8b2ce01d063f4e039074453e8aae"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "481afa9a55705ca17618673befe27473ddd25c3fdd9a8a76fe285574e60627de",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:10",
        "version": {
          "withMetadata": "7d1811c0c10a3a72644f6291586bc077bbc63ebb24df2e3e68e85ab5dcefe2f0",
          "withoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd",
          "linkedWithoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:12"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)2743",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2743": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "7bf25db4391b38095c06f66b9064c0a10ae0e246d04722a74bc66990203e43b0",
          "withoutMetadata": "eebb4f9b86f9230f54d8a21956865f49b800bfe71343c3ebd9f2ac1e3ea5beed",
          "linkedWithoutMetadata": "eebb4f9b86f9230f54d8a21956865f49b800bfe71343c3ebd9f2ac1e3ea5beed"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)2765",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)2743",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)3075_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)3061",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)2743": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)2765": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)3061": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)3054": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)3075_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)3075_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)3054",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)955",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)955": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:10",
        "version": {
          "withMetadata": "afcc3433e5c930cf56e4284b4a86e8faea7fa41f5a1de955a40b3d27bd233448",
          "withoutMetadata": "fc313b8f559d53200d297fbcabd204bfa822ec1bb2abe0f1914ca5d15d991694",
          "linkedWithoutMetadata": "fc313b8f559d53200d297fbcabd204bfa822ec1bb2abe0f1914ca5d15d991694"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)955",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:12"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)2640",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2640": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)955": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "7ef4e6edbbfa9048b2bf4916735106184097bf99b1b855635e2cbcc05cc4a12e",
          "withoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba",
          "linkedWithoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)240_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)226",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)226": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)219": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)240_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)240_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)219",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:10",
        "version": {
          "withMetadata": "7d1811c0c10a3a72644f6291586bc077bbc63ebb24df2e3e68e85ab5dcefe2f0",
          "withoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd",
          "linkedWithoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:12"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)2743",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2743": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:43",
        "version": {
          "withMetadata": "c6884bf778385a88781b3c1cbdebc6e086c30dac616e3b1bee41aec6836d9974",
          "withoutMetadata": "e5ccb7c3fd710128cc916bab4fc493bd72db11e79e1c78771554e1397c4c426b",
          "linkedWithoutMetadata": "e5ccb7c3fd710128cc916bab4fc493bd72db11e79e1c78771554e1397c4c426b"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)2765",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)2743",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:47"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:50"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:53"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:56"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:59"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:62"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:65"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:68"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:71"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)3075_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:83"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)3061",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:89"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:96"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:99"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:102"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:105"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:108"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:111"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)2743": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)2765": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)3061": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)3054": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)3075_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)3075_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)3054",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "700a4bc76cb30d315d28ee835be0097048679b19807b95fd707b7a0d6e6d5b12",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "3eeca5da946cfc073338694432ef43d82013c59211300b5aa86c871485abd965",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "db7c7df8008022f7abda86abff24cfb0dd645a8b3777a302219a24071332a66f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "f8e7e597138bd6a3c625d3e5c27bf708764785902345834716d21fa7d0b6546e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "14d83262946e141d1c7450eaef8fa01df7cdf34952c2ffaeec650a3bbff600bc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "d849d26e45ffc6a29b86a963806c3b1292c41024d76a81ab0bc0dc9323316c27",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "7ae09cbd29793a6571765036574df91dff285e5adf6087a9dda7d24f1503d703",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "e6772a4baa21b8e625a01e437cb75b53577fd5a1ed5995aa49325b982d5c978a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)6763",
              "contract": "BasePaymaster",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)6763": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "a4adbe85d240fe6d81a2c943bd67231747848b1f05793698985785f4e25a16d6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "dd800bdd9c90ecb6d13be8d0f2ce6f5450954e7b51559852b469a94b1aaac807",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "d03f6311a9449572776881a092521f39092b9008a05cd23c198c72c2048dd213",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "33ad264fa55e1c0982db780e66524f9efd72ee615e77fb7e8628086b4951cdf6",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)8730_storage)",
              "contract": "ERC20Permit",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8730_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8730_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "97affa442632f7f237aa1a6876af3dbcc1cd57baab347d700a16c72120d88d8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "7eac30adb31a48e2e0475725d1a85375c28ff70119d80b2fb26817c794cbbe1e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "8a76f70f50efdd7080481426464375908ed365fdbb7a486c4cb4d7df41fb1c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "765b1a4c47dacea83947242f73ae1f2b39021c39d614b7736286645bf19a235c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol:Math",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "37b7b640d636042b6b2f45b83f86f9c128a26e0220a053d7784c518b2e490a18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "cd19f9f52fabc6d8d2888549a435266edbe681d44d9cf35b03d09e678a40990d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "08287cb6909bcd4cf41d8610517d46ebab5a46c056d0d0c9d9ffcb94b2e63224",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "eaac7e5dd87ee25029f6944ca71bd3885b48b6d5115853c615d45a4d412760bf",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "ca5b37e68f514e26a062399ad0122e1ebc86feda89dd609c60bb1a45f93d73cd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/hardhat/console.sol:console": {
        "src": "contracts\\.deps\\npm\\hardhat\\console.sol:4",
        "version": {
          "withMetadata": "3f912a84853de8ae46b03fab10a4161d095c4399aa60373326c7f8fa214f945e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:9",
        "version": {
          "withMetadata": "760304615007e57a6c665cea15dac573e3e7440cc92ba715d0fa32d4421ea4f8",
          "withoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd",
          "linkedWithoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:10"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:15"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)19527",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)19527": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "f64ee044b477d35cb92891f6ec39207472359a12a93fa1fc463461e2e68fbc4d",
          "withoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba",
          "linkedWithoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)19549",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)19527",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)19857_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)19843",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)19527": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)19549": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)19843": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)19836": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)19857_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)19857_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)19836",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "3290b2745275c1b33042681952da5eba458cde2f70742134b433eed1e29decf5",
          "withoutMetadata": "e5ccb7c3fd710128cc916bab4fc493bd72db11e79e1c78771554e1397c4c426b",
          "linkedWithoutMetadata": "e5ccb7c3fd710128cc916bab4fc493bd72db11e79e1c78771554e1397c4c426b"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)19549",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)19527",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)20759_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)20745",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)19527": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)19549": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)20745": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)20738": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)20759_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)20759_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)20738",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "afdf4278e86a6b168586b2d79790e1438e9668969539eca89e393445aa0e9583",
          "withoutMetadata": "4dda8b3d100d40588a2e1d899419481c286d8b2ce01d063f4e039074453e8aae",
          "linkedWithoutMetadata": "4dda8b3d100d40588a2e1d899419481c286d8b2ce01d063f4e039074453e8aae"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "3290b2745275c1b33042681952da5eba458cde2f70742134b433eed1e29decf5",
          "withoutMetadata": "e5ccb7c3fd710128cc916bab4fc493bd72db11e79e1c78771554e1397c4c426b",
          "linkedWithoutMetadata": "e5ccb7c3fd710128cc916bab4fc493bd72db11e79e1c78771554e1397c4c426b"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "480535d54b1a1063b498a9ec39dc5d9dd20c1dbf0522b39d65aff22b7a77e894",
          "withoutMetadata": "4c5675f7c575b3ee18d26ea18d67110239e9d6c2772f7e0277f12c5a6df27f87",
          "linkedWithoutMetadata": "4c5675f7c575b3ee18d26ea18d67110239e9d6c2772f7e0277f12c5a6df27f87"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "9ebcb6c1c9c2b6b3940ca5671e183ced5ace92c4a9ab2daf609afcc6c4734a70",
          "withoutMetadata": "eebb4f9b86f9230f54d8a21956865f49b800bfe71343c3ebd9f2ac1e3ea5beed",
          "linkedWithoutMetadata": "eebb4f9b86f9230f54d8a21956865f49b800bfe71343c3ebd9f2ac1e3ea5beed"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "895dc3885e17feaea758955217ac395cff4509a059ae88b09304b92ae33d093c",
          "withoutMetadata": "15be94d7b3911a80d8cba6a6c423651c395b4203f8537887c57b8e440424b779",
          "linkedWithoutMetadata": "15be94d7b3911a80d8cba6a6c423651c395b4203f8537887c57b8e440424b779"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "8c2cd78a6a0f0a292b3f1dd54bfb3666b598e06512c67f889d2375f0f9daeb53",
          "withoutMetadata": "8d0351351198465a2d62404ada133c9e63d151f31c2fabc49b7cbdb24c8ab898",
          "linkedWithoutMetadata": "8d0351351198465a2d62404ada133c9e63d151f31c2fabc49b7cbdb24c8ab898"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "0ef69aa2d879dd30a6e9a0db6f231726bbe92b61b02ed9c52fd7adf4f9bd3f07",
          "withoutMetadata": "34e3705ba3914e6481f2c841271d677676a4a301d7c1c0c9a2c635fc9ee84d31",
          "linkedWithoutMetadata": "34e3705ba3914e6481f2c841271d677676a4a301d7c1c0c9a2c635fc9ee84d31"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "7338ab6d9d7a11d9f900ee420fd34ebc6595d819477b8c2a513c55e9b13488c1",
          "withoutMetadata": "6724af97f4be06532b71a38bde920d95dd1e2ffb5a7ac7512b610f8e54a15603",
          "linkedWithoutMetadata": "6724af97f4be06532b71a38bde920d95dd1e2ffb5a7ac7512b610f8e54a15603"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "d7a63d4425c36c4df2fb9a8d6d531eba6a31a151229a3e0bea30517a092aa9de",
          "withoutMetadata": "eebb4f9b86f9230f54d8a21956865f49b800bfe71343c3ebd9f2ac1e3ea5beed",
          "linkedWithoutMetadata": "eebb4f9b86f9230f54d8a21956865f49b800bfe71343c3ebd9f2ac1e3ea5beed"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "81a91ceacc39ea1df52a8cd503bea2c4da778f218394a794b9e9cc1cff8602c3",
          "withoutMetadata": "c28a38cd8347af748fa42e1f1f2669de8840f22da930888d445953c0ab2d9bcb",
          "linkedWithoutMetadata": "c28a38cd8347af748fa42e1f1f2669de8840f22da930888d445953c0ab2d9bcb"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "015ebb0da4c6c4538154171a7597aa4822fac110c3cd6540761603ebdaafaaaa",
          "withoutMetadata": "7c1a5e546f107b44d739c7ce3140776290c895ed44e790f32a7a6307e0b121b3",
          "linkedWithoutMetadata": "7c1a5e546f107b44d739c7ce3140776290c895ed44e790f32a7a6307e0b121b3"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "23e7d19f63d877802e93709216ae7fd94fd3a3745a6d5d3ad5002ed0d02ec434",
          "withoutMetadata": "69bcaf2d239bd8c954b47314e912837aa6df4f4a26bebf855633518011214af4",
          "linkedWithoutMetadata": "69bcaf2d239bd8c954b47314e912837aa6df4f4a26bebf855633518011214af4"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "91433cc3470d2bbb0466be01a75b6a104348ec145fe9aa290442a9a7639e690e",
          "withoutMetadata": "50899b707461591672ad933bc8b6e2dda36fc1a1e2094b74482b7949f74b918e",
          "linkedWithoutMetadata": "50899b707461591672ad933bc8b6e2dda36fc1a1e2094b74482b7949f74b918e"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "d7a63d4425c36c4df2fb9a8d6d531eba6a31a151229a3e0bea30517a092aa9de",
          "withoutMetadata": "eebb4f9b86f9230f54d8a21956865f49b800bfe71343c3ebd9f2ac1e3ea5beed",
          "linkedWithoutMetadata": "eebb4f9b86f9230f54d8a21956865f49b800bfe71343c3ebd9f2ac1e3ea5beed"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "0f72549cfd86000efdf547026792683e19d76a75cb1a698314652fe313ff769f",
          "withoutMetadata": "e590ee086b66b374aed2cf5f4df21890753cd60b5a28a8988bcb777de40bbab5",
          "linkedWithoutMetadata": "e590ee086b66b374aed2cf5f4df21890753cd60b5a28a8988bcb777de40bbab5"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "a456ebb4fb395ba6f172a90fa4b8857d95f66345379608f1f3f195fb1f129f90",
          "withoutMetadata": "93d561a6b2c2735ab356392bf48c1cd99510e19d7ffb6fe006d139036d72c22e",
          "linkedWithoutMetadata": "93d561a6b2c2735ab356392bf48c1cd99510e19d7ffb6fe006d139036d72c22e"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "b6062a09688a9fe7d051ee6a28f258e1186a42a358bd8de6ab8bf1159155cf48",
          "withoutMetadata": "4e64a8152db54dbff4dd885614234d83fa53b6b38d1c1a453b5fa669cae12406",
          "linkedWithoutMetadata": "4e64a8152db54dbff4dd885614234d83fa53b6b38d1c1a453b5fa669cae12406"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "e1cdc33aeb20ac285f2b8edd453cf184bbb23f0e17266352051a328de0f3a976",
          "withoutMetadata": "a60052c9abdc09d887b519c5302c5fa1b31b6583746ce3471393ea471ecfcf0b",
          "linkedWithoutMetadata": "a60052c9abdc09d887b519c5302c5fa1b31b6583746ce3471393ea471ecfcf0b"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "7338ab6d9d7a11d9f900ee420fd34ebc6595d819477b8c2a513c55e9b13488c1",
          "withoutMetadata": "6724af97f4be06532b71a38bde920d95dd1e2ffb5a7ac7512b610f8e54a15603",
          "linkedWithoutMetadata": "6724af97f4be06532b71a38bde920d95dd1e2ffb5a7ac7512b610f8e54a15603"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProject": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "ab9b16ca0d24fe80fd8c9b94119b9ecdd078de5e8238736995926b85cfe5d08d",
          "withoutMetadata": "6724af97f4be06532b71a38bde920d95dd1e2ffb5a7ac7512b610f8e54a15603",
          "linkedWithoutMetadata": "6724af97f4be06532b71a38bde920d95dd1e2ffb5a7ac7512b610f8e54a15603"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "31566b8602e1a055547a6dbc56b1508e516bd3f24b14e43c1d0ca70ce76da668",
          "withoutMetadata": "d313af155672a834529fb2ccb5ff6186be0c6dec1cb7dea81b4265ae23f26adc",
          "linkedWithoutMetadata": "d313af155672a834529fb2ccb5ff6186be0c6dec1cb7dea81b4265ae23f26adc"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProjectTEST": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "c90cdd628d186af5c9c5be564dc084f7980171e9732b2e6423fc85501a8140d5",
          "withoutMetadata": "5b2fee6384538daec2dcbced2e28ee0adc8953a304ec3c886f46e1746e31288c",
          "linkedWithoutMetadata": "5b2fee6384538daec2dcbced2e28ee0adc8953a304ec3c886f46e1746e31288c"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProjectTEST",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProjectTEST",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "f64ee044b477d35cb92891f6ec39207472359a12a93fa1fc463461e2e68fbc4d",
          "withoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba",
          "linkedWithoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProject copy.sol:RubixProject": {
        "src": "contracts\\RubixProject copy.sol:42",
        "version": {
          "withMetadata": "90d7239836efa0cf79d009ff3691b2b5c267cf547da8c9d4ca0c8523abd35aa9",
          "withoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba",
          "linkedWithoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject copy.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)239_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)225",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject copy.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)225": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)218": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)239_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)239_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)218",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProjectTEST.sol:RubixProject": {
        "src": "contracts\\RubixProjectTEST.sol:42",
        "version": {
          "withMetadata": "60d0f77945e68671297ecaa02d341ee79f240db6657faf094c42b9cb39ad61d0",
          "withoutMetadata": "5b2fee6384538daec2dcbced2e28ee0adc8953a304ec3c886f46e1746e31288c",
          "linkedWithoutMetadata": "5b2fee6384538daec2dcbced2e28ee0adc8953a304ec3c886f46e1746e31288c"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProjectTEST.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)202",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)180",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)1141_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)1127",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProjectTEST.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)202": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)1127": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)1120": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)1141_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)1141_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)1120",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)955",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)955": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:9",
        "version": {
          "withMetadata": "760304615007e57a6c665cea15dac573e3e7440cc92ba715d0fa32d4421ea4f8",
          "withoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd",
          "linkedWithoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)955",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:10"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:15"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)2640",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2640": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)955": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "700a4bc76cb30d315d28ee835be0097048679b19807b95fd707b7a0d6e6d5b12",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)950_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)950_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)950_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "3eeca5da946cfc073338694432ef43d82013c59211300b5aa86c871485abd965",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "db7c7df8008022f7abda86abff24cfb0dd645a8b3777a302219a24071332a66f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "f8e7e597138bd6a3c625d3e5c27bf708764785902345834716d21fa7d0b6546e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "14d83262946e141d1c7450eaef8fa01df7cdf34952c2ffaeec650a3bbff600bc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "d849d26e45ffc6a29b86a963806c3b1292c41024d76a81ab0bc0dc9323316c27",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "7ae09cbd29793a6571765036574df91dff285e5adf6087a9dda7d24f1503d703",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "e6772a4baa21b8e625a01e437cb75b53577fd5a1ed5995aa49325b982d5c978a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "afdf4278e86a6b168586b2d79790e1438e9668969539eca89e393445aa0e9583",
          "withoutMetadata": "4dda8b3d100d40588a2e1d899419481c286d8b2ce01d063f4e039074453e8aae",
          "linkedWithoutMetadata": "4dda8b3d100d40588a2e1d899419481c286d8b2ce01d063f4e039074453e8aae"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)950_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)950_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)950_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "700a4bc76cb30d315d28ee835be0097048679b19807b95fd707b7a0d6e6d5b12",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)950_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)950_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)950_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "3eeca5da946cfc073338694432ef43d82013c59211300b5aa86c871485abd965",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "db7c7df8008022f7abda86abff24cfb0dd645a8b3777a302219a24071332a66f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "f8e7e597138bd6a3c625d3e5c27bf708764785902345834716d21fa7d0b6546e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "14d83262946e141d1c7450eaef8fa01df7cdf34952c2ffaeec650a3bbff600bc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "d849d26e45ffc6a29b86a963806c3b1292c41024d76a81ab0bc0dc9323316c27",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "7ae09cbd29793a6571765036574df91dff285e5adf6087a9dda7d24f1503d703",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "e6772a4baa21b8e625a01e437cb75b53577fd5a1ed5995aa49325b982d5c978a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "b4c896df255c85b79be72364d2c248ca741ed26a9119559887a6ce3d63f05b59",
          "withoutMetadata": "f23d8f0649e331d20f2c015599f4401d9e7742a21d962842083aa744bc051fa3",
          "linkedWithoutMetadata": "f23d8f0649e331d20f2c015599f4401d9e7742a21d962842083aa744bc051fa3"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)950_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)950_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)950_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)955",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)955": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:9",
        "version": {
          "withMetadata": "7f22b31dc43bf35c9dbc0ef65ad8f894f0bc2623148f68d486576ef3f8210cf3",
          "withoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd",
          "linkedWithoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)955",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:10"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:15"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)2640",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2640": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)955": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)955",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)955": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:9",
        "version": {
          "withMetadata": "6584e01f375aaf47b1ac6ff2ed146771342a34e78a95342ab77aa21f78457c05",
          "withoutMetadata": "a4eb016037dff7b8e002eca857d95298bdd8d7c69e6f819cf68065bc6a88d326",
          "linkedWithoutMetadata": "a4eb016037dff7b8e002eca857d95298bdd8d7c69e6f819cf68065bc6a88d326"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)955",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:10"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:15"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)2640",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2640": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)955": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "700a4bc76cb30d315d28ee835be0097048679b19807b95fd707b7a0d6e6d5b12",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "3eeca5da946cfc073338694432ef43d82013c59211300b5aa86c871485abd965",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "db7c7df8008022f7abda86abff24cfb0dd645a8b3777a302219a24071332a66f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "f8e7e597138bd6a3c625d3e5c27bf708764785902345834716d21fa7d0b6546e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "14d83262946e141d1c7450eaef8fa01df7cdf34952c2ffaeec650a3bbff600bc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "d849d26e45ffc6a29b86a963806c3b1292c41024d76a81ab0bc0dc9323316c27",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "7ae09cbd29793a6571765036574df91dff285e5adf6087a9dda7d24f1503d703",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "e6772a4baa21b8e625a01e437cb75b53577fd5a1ed5995aa49325b982d5c978a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)",
          "getCurrencyAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:9",
        "version": {
          "withMetadata": "7f22b31dc43bf35c9dbc0ef65ad8f894f0bc2623148f68d486576ef3f8210cf3",
          "withoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd",
          "linkedWithoutMetadata": "4edfa96ea9c76d4e016d169931d8c2ed1bbdf1fb04dbdf800cf215f51ae9e0fd"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:10"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:15"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)5758",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)5758": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:42",
        "version": {
          "withMetadata": "f64ee044b477d35cb92891f6ec39207472359a12a93fa1fc463461e2e68fbc4d",
          "withoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba",
          "linkedWithoutMetadata": "0c9ce3674fca14bf240f297e0fd2540003a94327facd64690c8f3da2942691ba"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "rejectProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)",
          "rejectTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "escrow_address",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:43"
            },
            {
              "label": "escrow_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRubixEscrow)5780",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:44"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:45"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)5758",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:46"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:49"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:52"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:55"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:58"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "8",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:61"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:64"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)6088_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "13",
              "type": "t_enum(RubixProjectStatus)6074",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:95"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:98"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:101"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:104"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:107"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:110"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "17",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)5758": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRubixEscrow)5780": {
              "label": "contract IRubixEscrow",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)6074": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)6067": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)6088_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)6088_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)6067",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "afdf4278e86a6b168586b2d79790e1438e9668969539eca89e393445aa0e9583",
          "withoutMetadata": "4dda8b3d100d40588a2e1d899419481c286d8b2ce01d063f4e039074453e8aae",
          "linkedWithoutMetadata": "4dda8b3d100d40588a2e1d899419481c286d8b2ce01d063f4e039074453e8aae"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:58",
        "version": {
          "withMetadata": "ea2435e59e993932e4e4f8cff300122f2b94648c59393c9fa79be02a2da234ff",
          "withoutMetadata": "6dfca0c4a29deb1d149d714f2bc7786d9ede8681058e01ab7c7cdd7a2ac30882",
          "linkedWithoutMetadata": "6dfca0c4a29deb1d149d714f2bc7786d9ede8681058e01ab7c7cdd7a2ac30882"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address,address,uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:141"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:73"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:76"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:79"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "4",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:85"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:91"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:94"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)235_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:106"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "9",
              "type": "t_enum(RubixProjectStatus)221",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:112"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:119"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:122"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:125"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:128"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:131"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:134"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:137"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)221": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)214": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)235_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)235_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)214",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "contracts/.deps/npm/@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/testContract.sol:testContract": {
        "src": "contracts\\testContract.sol:4",
        "version": {
          "withMetadata": "395b60aab785500136b4db5cd0aced664c07d511f05a2d5509fd83e8dcdd800a",
          "withoutMetadata": "d1da69cf1a260a8ed6c810245c081e79968b814b9d406f0bc382ecbb619c78ed",
          "linkedWithoutMetadata": "d1da69cf1a260a8ed6c810245c081e79968b814b9d406f0bc382ecbb619c78ed"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "hireLeader(address)",
          "fireLeader(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "lead",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "testContract",
              "src": "contracts\\testContract.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)955",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)955": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)3542",
              "contract": "BasePaymaster",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)3542": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "a4adbe85d240fe6d81a2c943bd67231747848b1f05793698985785f4e25a16d6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "dd800bdd9c90ecb6d13be8d0f2ce6f5450954e7b51559852b469a94b1aaac807",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "contracts\\.deps\\npm\\@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "d03f6311a9449572776881a092521f39092b9008a05cd23c198c72c2048dd213",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "cd19f9f52fabc6d8d2888549a435266edbe681d44d9cf35b03d09e678a40990d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts\\.deps\\npm\\@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "ca5b37e68f514e26a062399ad0122e1ebc86feda89dd609c60bb1a45f93d73cd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:9",
        "version": {
          "withMetadata": "f7fd90825ceebe96c74094375ba5454c6f492172ba21aa8b7f98bb197028bbe0",
          "withoutMetadata": "3dba6c351a7c1584aa0d80cc7fbef589658bdab583cac4351965094332c7a3cf",
          "linkedWithoutMetadata": "3dba6c351a7c1584aa0d80cc7fbef589658bdab583cac4351965094332c7a3cf"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getCurrencyAddress()",
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixEscrow",
            "src": "contracts\\RubixEscrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)955",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:10"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:11"
            },
            {
              "label": "currency_address",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:15"
            },
            {
              "label": "currency_contract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)5149",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)5149": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)955": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "700a4bc76cb30d315d28ee835be0097048679b19807b95fd707b7a0d6e6d5b12",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "3eeca5da946cfc073338694432ef43d82013c59211300b5aa86c871485abd965",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "db7c7df8008022f7abda86abff24cfb0dd645a8b3777a302219a24071332a66f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "f8e7e597138bd6a3c625d3e5c27bf708764785902345834716d21fa7d0b6546e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "14d83262946e141d1c7450eaef8fa01df7cdf34952c2ffaeec650a3bbff600bc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "d849d26e45ffc6a29b86a963806c3b1292c41024d76a81ab0bc0dc9323316c27",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "7ae09cbd29793a6571765036574df91dff285e5adf6087a9dda7d24f1503d703",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "e6772a4baa21b8e625a01e437cb75b53577fd5a1ed5995aa49325b982d5c978a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "33ad264fa55e1c0982db780e66524f9efd72ee615e77fb7e8628086b4951cdf6",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)6655_storage)",
              "contract": "ERC20Permit",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)6655_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)6655_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "97affa442632f7f237aa1a6876af3dbcc1cd57baab347d700a16c72120d88d8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "7eac30adb31a48e2e0475725d1a85375c28ff70119d80b2fb26817c794cbbe1e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "8a76f70f50efdd7080481426464375908ed365fdbb7a486c4cb4d7df41fb1c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "765b1a4c47dacea83947242f73ae1f2b39021c39d614b7736286645bf19a235c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol:Math",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "37b7b640d636042b6b2f45b83f86f9c128a26e0220a053d7784c518b2e490a18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "contracts/.deps/npm/@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "contracts/.deps/npm/@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "08287cb6909bcd4cf41d8610517d46ebab5a46c056d0d0c9d9ffcb94b2e63224",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "contracts\\.deps\\npm\\@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "eaac7e5dd87ee25029f6944ca71bd3885b48b6d5115853c615d45a4d412760bf",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/.deps/npm/hardhat/console.sol:console": {
        "src": "contracts\\.deps\\npm\\hardhat\\console.sol:4",
        "version": {
          "withMetadata": "3f912a84853de8ae46b03fab10a4161d095c4399aa60373326c7f8fa214f945e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:25",
        "version": {
          "withMetadata": "2e8583575f507dd8409721668d53323c799a613b46fe73fefd53cb12bd53b300",
          "withoutMetadata": "3a15930e7fc5254f94857aaf4f2a044f7a8a5b37da3c3a507ba53e66f7829d82",
          "linkedWithoutMetadata": "3a15930e7fc5254f94857aaf4f2a044f7a8a5b37da3c3a507ba53e66f7829d82"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:26"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:58",
        "version": {
          "withMetadata": "ba5f372a82af8a861bca9415dd0fc4b3512342e226a668a17526505488d30ed5",
          "withoutMetadata": "2de591e3cc48be1bdef27c403aa002e450e107adc0ae705cbb4f73cb90f792f7",
          "linkedWithoutMetadata": "2de591e3cc48be1bdef27c403aa002e450e107adc0ae705cbb4f73cb90f792f7"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:141"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:73"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:76"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:79"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "4",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:85"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:91"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:94"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)17247_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:106"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "9",
              "type": "t_enum(RubixProjectStatus)17233",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:112"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:119"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:122"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:125"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:128"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:131"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:134"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:137"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)17233": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)17226": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)17247_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)17247_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)17226",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:7",
        "version": {
          "withMetadata": "b14b91254d4ba2f744f509e5ec5302cae6db18f5b4ddfa9eb9d1a172e5b65fa0",
          "withoutMetadata": "4dda8b3d100d40588a2e1d899419481c286d8b2ce01d063f4e039074453e8aae",
          "linkedWithoutMetadata": "4dda8b3d100d40588a2e1d899419481c286d8b2ce01d063f4e039074453e8aae"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "700a4bc76cb30d315d28ee835be0097048679b19807b95fd707b7a0d6e6d5b12",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)1077_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)1077_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1077_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "3eeca5da946cfc073338694432ef43d82013c59211300b5aa86c871485abd965",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "db7c7df8008022f7abda86abff24cfb0dd645a8b3777a302219a24071332a66f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "f8e7e597138bd6a3c625d3e5c27bf708764785902345834716d21fa7d0b6546e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "14d83262946e141d1c7450eaef8fa01df7cdf34952c2ffaeec650a3bbff600bc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "d849d26e45ffc6a29b86a963806c3b1292c41024d76a81ab0bc0dc9323316c27",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "7ae09cbd29793a6571765036574df91dff285e5adf6087a9dda7d24f1503d703",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "e6772a4baa21b8e625a01e437cb75b53577fd5a1ed5995aa49325b982d5c978a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:58",
        "version": {
          "withMetadata": "1cb1123c7fdb67522039957a7053aebb22e7b94e16b964335299745547fa3659",
          "withoutMetadata": "1f58d1a204acf63c82101a02eefa477553d7048c9c05f9fc24c0bc28fe686a12",
          "linkedWithoutMetadata": "1f58d1a204acf63c82101a02eefa477553d7048c9c05f9fc24c0bc28fe686a12"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:72"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:75"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:78"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:81"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "4",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:84"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:87"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:90"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:93"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)3350_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:105"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "9",
              "type": "t_enum(RubixProjectStatus)3336",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:111"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:118"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:121"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:124"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:127"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:130"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:133"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:136"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)3336": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)3329": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)3350_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)3350_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)3329",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "62017709e6ca4660722ff6b4593aa4d366b069d12874bb7d2d15c204c41937df",
          "withoutMetadata": "101b4f2a04f45e86f5969e6be56d72efb611c7c1579242bbebf4cefb4f5a7b08",
          "linkedWithoutMetadata": "101b4f2a04f45e86f5969e6be56d72efb611c7c1579242bbebf4cefb4f5a7b08"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)1077_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)1077_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1077_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster": {
        "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library"
        ],
        "methods": [
          "getRelayHub()",
          "supportsInterface(bytes4)",
          "getGasAndDataLimits()",
          "setRelayHub(address)",
          "setTrustedForwarder(address)",
          "getTrustedForwarder()",
          "()",
          "withdrawRelayHubDepositTo(uint256,address payable)",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:16",
        "inherit": [
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [],
        "methods": [
          "getTrustedForwarder()",
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol:IForwarder": {
        "src": "@opengsn\\contracts\\src\\forwarder\\IForwarder.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
          "registerRequestType(string,string)",
          "registerDomainSeparator(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IERC2771Recipient.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IPaymaster.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getGasAndDataLimits()",
          "getTrustedForwarder()",
          "getRelayHub()",
          "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)",
          "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "versionPaymaster()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol:IRelayHub": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IRelayHub.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addRelayWorkers(address[])",
          "onRelayServerRegistered(address)",
          "depositFor(address)",
          "withdraw(address payable,uint256)",
          "withdrawMultiple(address payable[],uint256[])",
          "relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)",
          "penalize(address,address payable)",
          "setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))",
          "setMinimumStakes(contract IERC20[],uint256[])",
          "deprecateHub(uint256)",
          "escheatAbandonedRelayBalance(address)",
          "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))",
          "calculateDevCharge(uint256)",
          "getConfiguration()",
          "getMinimumStakePerToken(address)",
          "getWorkerManager(address)",
          "getWorkerCount(address)",
          "balanceOf(address)",
          "getStakeManager()",
          "getPenalizer()",
          "getRelayRegistrar()",
          "getBatchGateway()",
          "verifyRelayManagerStaked(address)",
          "isRelayEscheatable(address)",
          "isDeprecated()",
          "getDeprecationTime()",
          "getCreationBlock()",
          "versionHub()",
          "aggregateGasleft()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol:IStakeManager": {
        "src": "@opengsn\\contracts\\src\\interfaces\\IStakeManager.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setRelayManagerOwner(address)",
          "stakeForRelayManager(address,address,uint256,uint256)",
          "unlockStake(address)",
          "withdrawStake(address)",
          "authorizeHubByOwner(address,address)",
          "authorizeHubByManager(address)",
          "unauthorizeHubByOwner(address,address)",
          "unauthorizeHubByManager(address)",
          "penalizeRelayManager(address,address,uint256)",
          "markRelayAbandoned(address)",
          "escheatAbandonedRelayStake(address)",
          "updateRelayKeepaliveTime(address)",
          "isRelayEscheatable(address)",
          "getStakeInfo(address)",
          "getMaxUnstakeDelay()",
          "setBurnAddress(address)",
          "getBurnAddress()",
          "setDevAddress(address)",
          "getAbandonedRelayServerConfig()",
          "getCreationBlock()",
          "versionSM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol:GsnEip712Library": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnEip712Library.sol:15",
        "version": {
          "withMetadata": "4056cd9c234c568879de2338811f45acdca70805c53df4c4a84bb7b2c983a3c6",
          "withoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8",
          "linkedWithoutMetadata": "3d07e68bdc39995e9a3f8164a125134d31046e88690ca59ab281ad3ebd32dae8"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol:GsnTypes": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnTypes.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol:GsnUtils": {
        "src": "@opengsn\\contracts\\src\\utils\\GsnUtils.sol:12",
        "version": {
          "withMetadata": "39fb3d616f2c7c2399939d5defac8e50d6c7bfbb179cc3c5d6636fdf28426cb0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol:MinLibBytes": {
        "src": "@opengsn\\contracts\\src\\utils\\MinLibBytes.sol:7",
        "version": {
          "withMetadata": "181ffb096fea1cf468f2ad7329a1143be542f5368b5af3c7b6c361f97af65a68",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "700a4bc76cb30d315d28ee835be0097048679b19807b95fd707b7a0d6e6d5b12",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "3eeca5da946cfc073338694432ef43d82013c59211300b5aa86c871485abd965",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "db7c7df8008022f7abda86abff24cfb0dd645a8b3777a302219a24071332a66f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "f8e7e597138bd6a3c625d3e5c27bf708764785902345834716d21fa7d0b6546e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "14d83262946e141d1c7450eaef8fa01df7cdf34952c2ffaeec650a3bbff600bc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "d849d26e45ffc6a29b86a963806c3b1292c41024d76a81ab0bc0dc9323316c27",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "1ef006645547183a7426aa9017cb499233285ece68865d9a5d1ec0fd526ad825",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "7ae09cbd29793a6571765036574df91dff285e5adf6087a9dda7d24f1503d703",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "e6772a4baa21b8e625a01e437cb75b53577fd5a1ed5995aa49325b982d5c978a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\v3-periphery\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "0fc914f4874947d17756145ca93ffb688dea6ff7d0f594d891c132131b758f4a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IERC20.sol:IERC20": {
        "src": "contracts\\IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/IRubixEscrow.sol:IRubixEscrow": {
        "src": "contracts\\IRubixEscrow.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addFunds(address,uint256)",
          "pay(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/Lock.sol:Lock": {
        "src": "contracts\\Lock.sol:7",
        "version": {
          "withMetadata": "fe6a0a169b118dc46cb92c2cf3316853784302cfc6ce6d162fcab80e97f956da",
          "withoutMetadata": "32d3554bc8a13582db0b28868b0c01929a838351fd373d89fd187b5992f6da5b",
          "linkedWithoutMetadata": "32d3554bc8a13582db0b28868b0c01929a838351fd373d89fd187b5992f6da5b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Lock",
            "src": "contracts\\Lock.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "unlockTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Lock",
              "src": "contracts\\Lock.sol:8"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address_payable",
              "contract": "Lock",
              "src": "contracts\\Lock.sol:9"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixEscrow.sol:RubixEscrow": {
        "src": "contracts\\RubixEscrow.sol:25",
        "version": {
          "withMetadata": "5a18405c53540a6d9e7af0fbc52692779461eb3b2385989a0900e9ff1c2826c4",
          "withoutMetadata": "3b6a09a84423849196b507613d6d46b7495703569915bc45f4bab4a8185abfcd",
          "linkedWithoutMetadata": "3b6a09a84423849196b507613d6d46b7495703569915bc45f4bab4a8185abfcd"
        },
        "inherit": [
          "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@opengsn/contracts/src/interfaces/IPaymaster.sol:IPaymaster",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "versionPaymaster()",
          "addFunds(address,uint256)",
          "getBalance()",
          "withdrawToEscrowWallet(uint256)",
          "decreaseUsedAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "relayHub",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRelayHub)1058",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:24"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BasePaymaster",
              "src": "@opengsn\\contracts\\src\\BasePaymaster.sol:25"
            },
            {
              "label": "targetWhitelist",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:26"
            },
            {
              "label": "usedAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RubixEscrow",
              "src": "contracts\\RubixEscrow.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRelayHub)1058": {
              "label": "contract IRelayHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RubixProject.sol:RubixProject": {
        "src": "contracts\\RubixProject.sol:58",
        "version": {
          "withMetadata": "31360cea3877aeaff21c3e22a198b7aede7afed7969ba75cd9eef6dac74e13d9",
          "withoutMetadata": "3e02c104d708381786a3655792e60c99143e027b28df22e01ba4777605869069",
          "linkedWithoutMetadata": "3e02c104d708381786a3655792e60c99143e027b28df22e01ba4777605869069"
        },
        "inherit": [
          "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
          "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol:IERC2771Recipient"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address,address,uint256[],uint256,uint8,bytes32,bytes32)",
          "hireLeader(address)",
          "fireLeader()",
          "startProject()",
          "completeProject()",
          "approveProject()",
          "addTask(string,uint256)",
          "assignTask(uint32,address)",
          "cancelTask(uint32)",
          "startTask(uint32)",
          "completeTask(uint32)",
          "approveTask(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RubixProject",
            "src": "contracts\\RubixProject.sol:135"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ERC2771Recipient",
              "src": "@opengsn\\contracts\\src\\ERC2771Recipient.sol:21"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:67"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:70"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:73"
            },
            {
              "label": "lead",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:76"
            },
            {
              "label": "counter",
              "offset": 20,
              "slot": "4",
              "type": "t_uint16",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:79"
            },
            {
              "label": "totalBudget",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:82"
            },
            {
              "label": "taskBudget",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:85"
            },
            {
              "label": "deadline",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:88"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint32,t_struct(RubixTask)6147_storage)",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:100"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "9",
              "type": "t_enum(RubixProjectStatus)6133",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:106"
            },
            {
              "label": "startLeaderPay",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:113"
            },
            {
              "label": "completeLeaderPay",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:116"
            },
            {
              "label": "approveLeaderPay",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:119"
            },
            {
              "label": "leadPayRate",
              "offset": 0,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:122"
            },
            {
              "label": "startPayRate",
              "offset": 4,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:125"
            },
            {
              "label": "completePayRate",
              "offset": 8,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:128"
            },
            {
              "label": "approvePayRate",
              "offset": 12,
              "slot": "13",
              "type": "t_uint32",
              "contract": "RubixProject",
              "src": "contracts\\RubixProject.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_enum(RubixProjectStatus)6133": {
              "label": "enum RubixProjectStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RubixTaskStatus)6126": {
              "label": "enum RubixTaskStatus",
              "members": [
                "AVAILABLE",
                "READY",
                "STARTED",
                "COMPLETED",
                "REJECTED",
                "APPROVED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_struct(RubixTask)6147_storage)": {
              "label": "mapping(uint32 => struct RubixTask)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RubixTask)6147_storage": {
              "label": "struct RubixTask",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentPay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "assignedTo",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(RubixTaskStatus)6126",
                  "offset": 20,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/SampleToken.sol:SampleToken": {
        "src": "contracts\\SampleToken.sol:8",
        "version": {
          "withMetadata": "cd180dc840ab7d794c90296d3cc4d0e339224795ba919f1249f7bfe750e23602",
          "withoutMetadata": "ab6e54c94ebd6e7858adf530de5bf59ed94c5c00f3800c2e0b1187a1a0001f2c",
          "linkedWithoutMetadata": "ab6e54c94ebd6e7858adf530de5bf59ed94c5c00f3800c2e0b1187a1a0001f2c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SampleToken",
            "src": "contracts\\SampleToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)3025_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:25"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "8",
              "type": "t_bytes32",
              "contract": "ERC20Permit",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Permit.sol:37",
              "renamedFrom": "_PERMIT_TYPEHASH"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)3025_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)3025_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "f9678e4cb0811b683e5310c0d2fe5b39daa3ab304ec4e0c5a334d09508bd8d2f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      }
    }
  ]
}